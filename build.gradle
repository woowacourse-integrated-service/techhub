plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.integrated'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

jacoco {
	toolVersion = "0.8.8"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		html.required = true

		html.destination file("${buildDir}/jacoco/index.html")
	}

	afterEvaluate {
		classDirectories.setFrom(
				files(classDirectories.files.collect {
					fileTree(dir: it, excludes: [
							'**/*Application*',
							'**/*Exception*',
							'**/*Response*',
							'**/*Request*',
							'**/BaseTimeEntity',
							'**/*Dto*',
							'**/S3*',
							'**/*Interceptor*',
							'**/*ArgumentResolver*',
							'**/*ExceptionHandler*',
							'**/LoggingUtils',
							'**/*Url*',
							'**/*AdminController*'
					])
				})
		)
	}

	finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
	def Qdomains = []

	for (qPattern in '*.QA'..'*.QZ') { // qPattern = '*.QA', '*.QB', ... '*.QZ'
		Qdomains.add(qPattern + '*')
	}

	violationRules {
		rule {
			enabled = true
			element = "CLASS"

			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.9
			}

			excludes = [
					'*.*Application',
					'*.*Exception*',
					'*.*Dto',
					'*.S3*',
					'*.*Response',
					'*.*Request',
					'*.BaseTimeEntity',
					'*.*Interceptor',
					'*.*ArgumentResolver',
					'*.*ExceptionHandler',
					'*.LoggingUtils',
					'*.*Url',
					'*.*AdminController'
			] + Qdomains
		}
	}
}

test {
	useJUnitPlatform()
	finalizedBy 'jacocoTestReport'
}